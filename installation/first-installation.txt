https://developers.redhat.com/products/openshift/download

Self-managed
Deploy on your local development machine*
Create a minimal cluster on your desktop or laptop for local development and testing with Red Hat OpenShift Local.

Trial length: 60 days

Start your trial    <---------------- click

*Recommended for starting development
=========================================================
https://okd.io/docs/project/crc#download-codeready-containers-for-okd

Download CodeReady Containers for OKD
Run a developer instance of OKD4 on your local workstation with CodeReady Containers built for OKD - >No Pull Secret Required! The Getting Started Guide explains how to install and use CodeReady Containers.

You can fetch crc binaries without Red Hat subscription here <------------

$ crc config set preset okd
Changes to configuration property 'preset' are only applied when the CRC instance is created.
If you already have a running CRC instance with different preset, then for this configuration change to take effect, delete the CRC instance with 'crc delete', setup it with `crc setup` and start it with 'crc start'.

$ crc config view
- consent-telemetry                     : yes
- preset                                : okd
============================================================================================
https://developers.redhat.com/content-gateway/rest/mirror2/pub/openshift-v4/clients/crc/latest/

crc-linux-amd64.tar.xz	34.9M	Thu Nov 21 06:58:16 2024	
crc-macos-installer.pkg	92.5M	Thu Nov 21 06:58:25 2024	
crc-windows-installer.zip	40.9M	Thu Nov 21 06:58:28 2024	

click windows installer to download <------ click

for checking
------------
Download CodeReady Containers for OKD
Run a developer instance of OKD4 on your local workstation with CodeReady Containers built for OKD - >No Pull Secret Required! The Getting Started Guide explains how to install and use CodeReady Containers.

You can fetch crc binaries without Red Hat subscription here

$ crc config set preset okd
Changes to configuration property 'preset' are only applied when the CRC instance is created.
If you already have a running CRC instance with different preset, then for this configuration change to take effect, delete the CRC instance with 'crc delete', setup it with `crc setup` and start it with 'crc start'.

$ crc config view
- consent-telemetry                     : yes
- preset                                : okd

==============================================================================================
https://console.redhat.com/openshift/create/local

Download what you need to get started
OpenShift Local
Download and extract the OpenShift Local archive on your computer and open the installer. Opening the installer will automatically start a step-by-step installation guide.


Windows

x86_64
Pull secret
Download or copy your pull secret. You'll be prompted for this information during installation.
==================================================================================================
PS C:\Program Files\Red Hat OpenShift Local> .\crc.exe setup

INFO Downloading bundle: C:\Users\MegaStore\.crc\cache\crc_hyperv_4.17.3_amd64.crcbundle...
5.09 GiB / 5.09 GiB [------------------------------------------------------------------------------] 100.00% 3.09 MiB/s
INFO Uncompressing C:\Users\MegaStore\.crc\cache\crc_hyperv_4.17.3_amd64.crcbundle
crc.vhdx:  20.63 GiB / 20.63 GiB [----------------------------------------------------------------------------] 100.00%
oc.exe:  128.74 MiB / 128.74 MiB [----------------------------------------------------------------------------] 100.00%

PS C:\Program Files\Red Hat OpenShift Local> crc start
-----------------------------------------------------------------------------
Started the OpenShift cluster.

The server is accessible via web console at:
  https://console-openshift-console.apps-crc.testing

Log in as administrator:
  Username: kubeadmin
  Password: 2bwbR-vY8vj-IXhVE-uNrjh

Log in as user:
  Username: developer
  Password: developer

Use the 'oc' command line interface:
  PS> & crc oc-env | Invoke-Expression
  PS> oc login -u developer https://api.crc.testing:6443
-----------------------------------------------------------------------------------
PS C:\Program Files\Red Hat OpenShift Local> oc login -u kubeadmin https://api.crc.testing:6443
Logged into "https://api.crc.testing:6443" as "kubeadmin" using existing credentials.

You have access to 66 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "amer-project".
--------------------------------------------------------------------------------------
PS C:\Program Files\Red Hat OpenShift Local> & crc oc-env | Invoke-Expression
PS C:\Program Files\Red Hat OpenShift Local> oc login -u developer https://api.crc.testing:6443
Logged into "https://api.crc.testing:6443" as "developer" using existing credentials.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

PS C:\Program Files\Red Hat OpenShift Local> oc new-project amer-project
Now using project "amer-project" on server "https://api.crc.testing:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost serve-hostname

PS C:\Program Files\Red Hat OpenShift Local> oc new-app rails-postgresql-example
--> Deploying template "amer-project/rails-postgresql-example" to project amer-project
------------------------------------------------------------------------------------
PS C:\Program Files\Red Hat OpenShift Local> kubectl create deployment hello-node --image=registry.k8s.io/e2e-test-images/agnhost:2.43 -- /agnhost console-openshift-console.apps-crc.testing
deployment.apps/hello-node created
PS C:\Program Files\Red Hat OpenShift Local> ping console-openshift-console.apps-crc.testing

Pinging api.crc.testing [127.0.0.1] with 32 bytes of data:
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128
Reply from 127.0.0.1: bytes=32 time<1ms TTL=128



---------------------------------------------------------------------------------------
PS C:\Program Files\Red Hat OpenShift Local> oc
OpenShift Client

This client helps you develop, build, deploy, and run your applications on any
OpenShift or Kubernetes cluster. It also includes the administrative
commands for managing a cluster under the 'adm' subcommand.

Basic Commands:
  login             Log in to a server
  new-project       Request a new project
  new-app           Create a new application
  status            Show an overview of the current project
  project           Switch to another project
  projects          Display existing projects
  explain           Get documentation for a resource

Build and Deploy Commands:
  rollout           Manage a Kubernetes deployment or OpenShift deployment config
  rollback          Revert part of an application back to a previous deployment
  new-build         Create a new build configuration
  start-build       Start a new build
  cancel-build      Cancel running, pending, or new builds
  import-image      Import images from a container image registry
  tag               Tag existing images into image streams

Application Management Commands:
  create            Create a resource from a file or from stdin
  apply             Apply a configuration to a resource by file name or stdin
  get               Display one or many resources
  describe          Show details of a specific resource or group of resources
  edit              Edit a resource on the server
  set               Commands that help set specific features on objects
  label             Update the labels on a resource
  annotate          Update the annotations on a resource
  expose            Expose a replicated application as a service or route
  delete            Delete resources by file names, stdin, resources and names, or by resources and label selector
  scale             Set a new size for a deployment, replica set, or replication controller
  autoscale         Autoscale a deployment config, deployment, replica set, stateful set, or replication controller
  secrets           Manage secrets

Troubleshooting and Debugging Commands:
  logs              Print the logs for a container in a pod
  rsh               Start a shell session in a container
  rsync             Copy files between a local file system and a pod
  port-forward      Forward one or more local ports to a pod
  debug             Launch a new instance of a pod for debugging
  exec              Execute a command in a container
  proxy             Run a proxy to the Kubernetes API server
  attach            Attach to a running container
  run               Run a particular image on the cluster
  cp                Copy files and directories to and from containers
  wait              Experimental: Wait for a specific condition on one or many resources
  events            List events

Advanced Commands:
  adm               Tools for managing a cluster
  replace           Replace a resource by file name or stdin
  patch             Update fields of a resource
  process           Process a template into list of resources
  extract           Extract secrets or config maps to disk
  observe           Observe changes to resources and react to them (experimental)
  policy            Manage authorization policy
  auth              Inspect authorization
  image             Useful commands for managing images
  registry          Commands for working with the registry
  idle              Idle scalable resources
  api-versions      Print the supported API versions on the server, in the form of "group/version"
  api-resources     Print the supported API resources on the server
  cluster-info      Display cluster information
  diff              Diff the live version against a would-be applied version
  kustomize         Build a kustomization target from a directory or URL

Settings Commands:
  get-token         Experimental: Get token from external OIDC issuer as credentials exec plugin
  logout            End the current server session
  config            Modify kubeconfig files
  whoami            Return information about the current session
  completion        Output shell completion code for the specified shell (bash, zsh, fish, or powershell)

Other Commands:
  plugin            Provides utilities for interacting with plugins
  version           Print the client and server version information

Usage:
  oc [flags] [options]

Use "oc <command> --help" for more information about a given command.
Use "oc options" for a list of global command-line options (applies to all commands).

-------------------------------------------------------------

PS C:\Program Files\Red Hat OpenShift Local> oc projects
You have access to the following projects and can switch between them with ' project <projectname>':

  * amer-project
    default
    hostpath-provisioner
    kube-node-lease
    kube-public
    kube-system
    openshift
    openshift-apiserver
    openshift-apiserver-operator
    openshift-authentication
    openshift-authentication-operator
    openshift-cloud-network-config-controller
    openshift-cloud-platform-infra
    openshift-cluster-machine-approver
    openshift-cluster-samples-operator
    openshift-cluster-storage-operator
    openshift-cluster-version
    openshift-config
    openshift-config-managed
    openshift-config-operator
    openshift-console
    openshift-console-operator
    openshift-console-user-settings
    openshift-controller-manager
    openshift-controller-manager-operator
    openshift-dns
    openshift-dns-operator
    openshift-etcd
    openshift-etcd-operator
    openshift-host-network
    openshift-image-registry
    openshift-infra
    openshift-ingress
    openshift-ingress-canary
    openshift-ingress-operator
    openshift-kni-infra
    openshift-kube-apiserver
    openshift-kube-apiserver-operator
    openshift-kube-controller-manager
    openshift-kube-controller-manager-operator
    openshift-kube-scheduler
    openshift-kube-scheduler-operator
    openshift-kube-storage-version-migrator
    openshift-kube-storage-version-migrator-operator
    openshift-machine-api
    openshift-machine-config-operator
    openshift-marketplace
    openshift-monitoring
    openshift-multus
    openshift-network-console
    openshift-network-diagnostics
    openshift-network-node-identity
    openshift-network-operator
    openshift-node
    openshift-nutanix-infra
    openshift-oauth-apiserver
    openshift-openstack-infra
    openshift-operator-lifecycle-manager
    openshift-operators
    openshift-ovirt-infra
    openshift-ovn-kubernetes
    openshift-route-controller-manager
    openshift-service-ca
    openshift-service-ca-operator
    openshift-user-workload-monitoring
    openshift-vsphere-infra

Using project "amer-project" on server "https://api.crc.testing:6443".
--------------------------------------------------------------------------
PS C:\Program Files\Red Hat OpenShift Local> oc get ns
NAME                                               STATUS   AGE
amer-project                                       Active   131m
default                                            Active   30d
hostpath-provisioner                               Active   29d
kube-node-lease                                    Active   30d
kube-public                                        Active   30d
kube-system                                        Active   30d
openshift                                          Active   30d
openshift-apiserver                                Active   30d
openshift-apiserver-operator                       Active   30d
openshift-authentication                           Active   30d
openshift-authentication-operator                  Active   30d
openshift-cloud-network-config-controller          Active   30d
-------------------------------------------------------------------------
PS C:\Program Files\Red Hat OpenShift Local> crc console --credentials
To login as a regular user, run 'oc login -u developer -p developer https://api.crc.testing:6443'.
To login as an admin, run 'oc login -u kubeadmin -p 2bwbR-vY8vj-IXhVE-uNrjh https://api.crc.testing:6443'
---------------------------------------------------------------------------------
----------------------------------------------------------------------------------
from Browser:
-------------

console-openshift-console.apps-crc.testing


-------------------------------------------------------------------------------------

https://console.redhat.com/openshift/downloads
-------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

PS C:\Program Files\Red Hat OpenShift Local> oc get project amer-project
NAME           DISPLAY NAME   STATUS
amer-project                  Active

PS C:\Program Files\Red Hat OpenShift Local> oc describe project amer-project
Name:                   amer-project
Created:                2 hours ago
Labels:                 kubernetes.io/metadata.name=amer-project
                        pod-security.kubernetes.io/audit=restricted
                        pod-security.kubernetes.io/audit-version=latest
                        pod-security.kubernetes.io/warn=restricted
                        pod-security.kubernetes.io/warn-version=latest
Annotations:            openshift.io/description=
                        openshift.io/display-name=
                        openshift.io/requester=developer
                        openshift.io/sa.scc.mcs=s0:c26,c0
                        openshift.io/sa.scc.supplemental-groups=1000650000/10000
                        openshift.io/sa.scc.uid-range=1000650000/10000
Display Name:           <none>
Description:            <none>
Status:                 Active
Node Selector:          <none>
Quota:                  <none>
Resource limits:        <none>

PS C:\Program Files\Red Hat OpenShift Local> oc get project amer-project -o yaml
apiVersion: project.openshift.io/v1
kind: Project
metadata:
  annotations:
    openshift.io/description: ""
    openshift.io/display-name: ""
    openshift.io/requester: developer
    openshift.io/sa.scc.mcs: s0:c26,c0
    openshift.io/sa.scc.supplemental-groups: 1000650000/10000
    openshift.io/sa.scc.uid-range: 1000650000/10000
  creationTimestamp: "2024-12-10T19:31:21Z"
  labels:
    kubernetes.io/metadata.name: amer-project
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/audit-version: latest
    pod-security.kubernetes.io/warn: restricted
    pod-security.kubernetes.io/warn-version: latest
  name: amer-project
  resourceVersion: "33995"
  uid: 8d307507-5469-4dd7-9673-0113b6a80c63
spec:
  finalizers:
  - kubernetes
status:
  phase: Active

note:
----
kind: Project <----- this kind doesn't exist in kubernetes

----------------------------------------------------------------------------------------------




